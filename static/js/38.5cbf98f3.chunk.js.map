{"version":3,"file":"static/js/38.5cbf98f3.chunk.js","mappings":"0OAYMA,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,gCAClBC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,gCAEZ,SAASE,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEQC,GAAQC,EAAAA,EAAAA,MAARD,IACAE,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAUC,EAAAA,EAAAA,OAMhBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GAASM,MAAK,SAAAC,GAC5BV,EAASU,QAEV,CAACP,IAEJ,IAAQQ,EAAqDZ,EAArDY,MAAOC,EAA8Cb,EAA9Ca,WAAYC,EAAkCd,EAAlCc,SAAUC,EAAwBf,EAAxBe,YAAaC,EAAWhB,EAAXgB,OAElD,OACE,8BACGhB,IACC,iCACE,mBAAQiB,KAAK,SAASC,QAhBb,WACfZ,EAAQa,UAeF,sBAGA,iBAAKC,UAAWC,EAAAA,EAAAA,UAAhB,WACE,4BACE,kCAAQT,KACPG,IACC,gBACEO,IAAG,0CAAqCP,GACxCQ,IAAKX,EACLQ,UAAWC,EAAAA,EAAAA,aAIjB,iBAAKD,UAAWC,EAAAA,EAAAA,SAAhB,WACE,6CAAmBR,MACnB,sCACA,uBAAIC,KACJ,oCACA,eAAIM,UAAWC,EAAAA,EAAAA,WAAf,SACGL,GACCA,EAAOQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACT,eAAaN,UAAWC,EAAAA,EAAAA,WAAxB,SACGK,GADMD,eAOnB,4BACE,gBAAKL,UAAWC,EAAAA,EAAAA,WAAhB,UACE,2BACE,yBACE,SAAC,KAAD,CAASM,GAAE,UAAKzB,EAAL,SAAiB0B,OAAK,EAAjC,qBAIF,yBACE,SAAC,KAAD,CAASD,GAAE,UAAKzB,EAAL,YAAoB0B,OAAK,EAApC,6BAON,UAAC,EAAAC,SAAD,CAAUC,UAAU,gFAApB,WACE,SAAC,KAAD,CAAOC,KAAI,UAAK7B,EAAL,SAAiB0B,OAAK,EAAjC,UACE,SAACjC,EAAD,CAAMS,QAASA,OAEjB,SAAC,KAAD,CAAO2B,KAAI,UAAK7B,EAAL,YAAoB0B,OAAK,EAApC,UACE,SAAC/B,EAAD,CAASO,QAASA,mB,oLCzF5B4B,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,yGAAmBhC,EAAnB,+BAAyB,GAAzB,SACyBiC,MAAMjC,GAD/B,cACQkC,EADR,yBAESA,EAASC,QAFlB,mEAKO,SAASC,IACd,OAAOJ,EAAI,GAAD,OAAID,EAAJ,uCAA2CD,IAEhD,SAASvB,EAAgB8B,GAC9B,OAAOL,EAAI,GAAD,OAAID,EAAJ,kBAAsBM,EAAtB,oBAA0CP,IAE/C,SAASQ,EAAQD,GACtB,OAAOL,EAAI,GAAD,OACLD,EADK,kBACaM,EADb,4BACyCP,EADzC,oBAIL,SAASS,EAAUF,GACxB,OAAOL,EAAI,GAAD,OAAID,EAAJ,kBAAsBM,EAAtB,4BAAkDP,EAAlD,YAEL,SAASU,EAAU1C,GACxB,OAAOkC,EAAI,GAAD,OAAID,EAAJ,iCAAqCD,EAArC,kBAAsDhC,M,iBCtBlE,KAAgB,SAAW,wBAAwB,SAAW,wBAAwB,SAAW,wBAAwB,UAAY,yBAAyB,SAAW,wBAAwB,OAAS,sBAAsB,WAAa,0BAA0B,WAAa,0BAA0B,WAAa","sources":["components/views/MovieDetailsPage.js","services/api-service.js","webpack://react-homework-template/./src/components/views/Views.module.css?d717"],"sourcesContent":["import {\n  useParams,\n  NavLink,\n  useRouteMatch,\n  Route,\n  useHistory,\n} from 'react-router-dom/cjs/react-router-dom.min';\nimport { useState, useEffect, lazy, Suspense } from 'react';\nimport { getMovieDetails } from 'services/api-service';\n\nimport styles from './Views.module.css';\n\nconst Cast = lazy(() => import('./Cast'));\nconst Reviews = lazy(() => import('./Reviews'));\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState([]);\n\n  const { url } = useRouteMatch();\n  const { movieId } = useParams();\n\n  const history = useHistory();\n\n  const onGoBack = () => {\n    history.goBack();\n  };\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(data => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  const { title, popularity, overview, poster_path, genres } = movie;\n\n  return (\n    <>\n      {movie && (\n        <>\n          <button type=\"button\" onClick={onGoBack}>\n            Go back\n          </button>\n          <div className={styles.container}>\n            <div>\n              <h3>{`${title}`}</h3>\n              {poster_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt={title}\n                  className={styles.poster}\n                />\n              )}\n            </div>\n            <div className={styles.overview}>\n              <p>{`popularity: ${popularity}`}</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>genres</h3>\n              <ul className={styles.genresList}>\n                {genres &&\n                  genres.map(({ id, name }) => (\n                    <li key={id} className={styles.genresItem}>\n                      {name}\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          </div>\n          <div>\n            <div className={styles.additional}>\n              <ul>\n                <li>\n                  <NavLink to={`${url}/cast`} exact>\n                    Cart\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink to={`${url}/reviews`} exact>\n                    Reviews\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n\n            <Suspense fallback={<h1>Загружаю...</h1>}>\n              <Route path={`${url}/cast`} exact>\n                <Cast movieId={movieId} />\n              </Route>\n              <Route path={`${url}/reviews`} exact>\n                <Reviews movieId={movieId} />\n              </Route>\n            </Suspense>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","const API_KEY = '6ab460452e9d6fb8f59cab399bd5ef0f';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function Api(url = '') {\n  const response = await fetch(url);\n  return response.json();\n}\n\nexport function getTrending() {\n  return Api(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\nexport function getMovieDetails(moviesId) {\n  return Api(`${BASE_URL}/movie/${moviesId}?api_key=${API_KEY}`);\n}\nexport function getCast(moviesId) {\n  return Api(\n    `${BASE_URL}/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\nexport function getRewiew(moviesId) {\n  return Api(`${BASE_URL}/movie/${moviesId}/reviews?api_key=${API_KEY}&page=1`);\n}\nexport function getSearch(movie) {\n  return Api(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${movie}`);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Views_castList__X5YFf\",\"castItem\":\"Views_castItem__tr03R\",\"portrait\":\"Views_portrait__qhorq\",\"container\":\"Views_container__3N4no\",\"overview\":\"Views_overview__WruRQ\",\"poster\":\"Views_poster__cZG+f\",\"additional\":\"Views_additional__+Fp7t\",\"genresList\":\"Views_genresList__raAgr\",\"genresItem\":\"Views_genresItem__PTGck\"};"],"names":["Cast","lazy","Reviews","MovieDetailsPage","useState","movie","setMovie","url","useRouteMatch","movieId","useParams","history","useHistory","useEffect","getMovieDetails","then","data","title","popularity","overview","poster_path","genres","type","onClick","goBack","className","styles","src","alt","map","id","name","to","exact","Suspense","fallback","path","API_KEY","BASE_URL","Api","fetch","response","json","getTrending","moviesId","getCast","getRewiew","getSearch"],"sourceRoot":""}